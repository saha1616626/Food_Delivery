<Page x:Class="Food_Delivery.View.Administrator.MenuSectionPages.PageCategory"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:Food_Delivery.View.Administrator.MenuSectionPages"
      xmlns:viewModel="clr-namespace:Food_Delivery.ViewModel.Administrator"
      PreviewMouseLeftButtonUp="Window_MouseLeftButtonDown"
      MouseLeftButtonDown="Window_LossOfFocus"
      mc:Ignorable="d" 
      MinHeight="700" Height="Auto"
      Title="PageCategory">

    <Page.Resources>
        <viewModel:CategoryViewModel x:Key="CategoryViewModel"/>

        <!--анимация подсветки полей-->
        <Storyboard x:Key="FieldIllumination">
            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
        From="#de6d6d" To="Transparent" Duration="0:0:3" AutoReverse="False"/>
        </Storyboard>
    </Page.Resources>

    <Grid Background="AliceBlue" DataContext="{StaticResource CategoryViewModel}">

        <!--стили-->
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="\Dictionary\Table.xaml"/>
                    <ResourceDictionary Source="\Dictionary\Popup.xaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--заголовок страницы-->
        <TextBlock Text="Категории блюд" Grid.Row="0" FontSize="30" 
                   Foreground="Black" FontWeight="DemiBold"  Margin="50,10,50,15"/>

        <!--поле для вывода ошибок-->
        <TextBlock Grid.ColumnSpan="4" Grid.RowSpan="4" HorizontalAlignment="Center"
           Text="{Binding ErrorInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
           Margin="0,300,0,0" x:Name="ErrorInput" FontWeight="DemiBold" FontSize="20" Panel.ZIndex="1"/>

        <!--кнопки для взаиомодействия над таблицей-->
        <Grid Grid.Row="1"  Margin="50,0,50,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBox Grid.Row="0" Grid.Column="0" x:Name="Search" 
     Height="50" Margin="0,0,0,0"
     VerticalAlignment="Center" HorizontalAlignment="Left"
     Text="{Binding NameCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
     materialDesign:TextFieldAssist.HasClearButton="True"
     TextChanged="СategorySearch"
     Style="{StaticResource MaterialDesignOutlinedTextBox}" 
     materialDesign:HintAssist.Hint="Поиск категории" 
     materialDesign:TextFieldAssist.CharacterCounterVisibility="Hidden"
     MaxLength="100" TextWrapping="Wrap" Width="300" />

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" >
                <Button Content="Добавить" 
        MinWidth="100" Height="35" Background="Gray" Command="{Binding Btn_OpenPopupToAddData}"
        BorderBrush="Black"/>

                <Button Content="Редктировать" Command="{Binding Btn_OpenPopupToEditData}"
        MinWidth="100" Height="35" Background="Gray" BorderBrush="Black"
        Margin="10,0,0,0" IsEnabled="{Binding IsWorkButtonEnable}"/>

                <Button Content="Удалить" MinWidth="100" 
        Height="35" Background="Gray" BorderBrush="Black" Command="{Binding Btn_OpenPopupToDeleteData}"
        Margin="10,0,0,0" IsEnabled="{Binding IsWorkButtonEnable}"/>
            </StackPanel>

        </Grid>

        <!--таблица-->
        <Grid  Grid.Row="2">
            <DataGrid x:Name="Content" Margin="50,15,50,0"
                      Padding="0,0,0,100"
                      VerticalScrollBarVisibility="Auto"
                      IsReadOnly="True"
                      AutoGenerateColumns="False" 
                      HorizontalScrollBarVisibility="Hidden"
                      ColumnHeaderStyle="{StaticResource columnTableHeader}"
                      ItemsSource="{Binding ListCategory}"
                      SelectedItem="{Binding SelectedCategory}">
                <DataGrid.Columns>
                    <DataGridTextColumn Width="50*" Header="Название" Binding="{Binding name}">

                    </DataGridTextColumn>
                    <DataGridTextColumn Width="50*" Header="Описание" Binding="{Binding description}">

                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!--Popap добавления и редактирования информации-->

        <!--фон для Popup-->
        <Border Grid.ColumnSpan="4" Grid.RowSpan="4" x:Name="DarkBackground" 
                Background="#80000000" Visibility="Collapsed" Panel.ZIndex="1" 
                Margin="-500,0,-500,-500"/>

        <!-- размещение Popup относительно данного grid-->
        <Grid x:Name="positionPopup" Grid.RowSpan="4" Grid.ColumnSpan="4" 
              HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <!--Popup для редактирования или добавления данных-->
        <Grid>
            <Popup x:Name="AddAndEditDataPopup" PlacementTarget="{Binding ElementName=positionPopup}" 
                   Placement="Center" Grid.ColumnSpan="4" Grid.RowSpan="4" HorizontalOffset="0" 
                   VerticalOffset="-40" StaysOpen="False" Closed="MyPopup_Closed" 
                   AllowsTransparency="False" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid Background="Gray">
                    <!--фон-->
                    <Border Background="AliceBlue" Style="{StaticResource OutlineOfPopup}" >
                        <Grid Width="900" Height="500">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!--название-->
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding HeadingPopup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="30" 
           Foreground="Black" FontWeight="DemiBold" Margin="0,110,0,0" 
           VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <!--поле для вывода ошибок-->
                            <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Text="{Binding ErrorInputPopup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
           Margin="20,50,90,0" x:Name="ErrorInputPopup" FontWeight="DemiBold" FontSize="21"/>

                            <!--поля для ввода данных-->
                            <TextBox Grid.Row="1" x:Name="NameCategory" Height="50" Margin="0,30,0,0"
                                 VerticalAlignment="Center" HorizontalAlignment="Center"
                                 Text="{Binding OutNameCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 Style="{StaticResource MaterialDesignOutlinedTextBox}" 
                                 materialDesign:HintAssist.Hint="Введите название категории*" 
                                 materialDesign:TextFieldAssist.CharacterCounterVisibility="Hidden"
                                 MaxLength="100" TextWrapping="Wrap" Width="320" />

                            <TextBox Grid.Row="2" x:Name="DescriptionCategory" Height="80" 
                                 VerticalAlignment="Center" materialDesign:HintAssist.Hint="Введите описание категории" 
                                 Text="{Binding OutNameDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 materialDesign:TextFieldAssist.CharacterCounterVisibility="{Binding Path=IsChecked, 
                                 ElementName=MaterialDesignOutlinedTextBoxTextCountComboBox, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 MaxLength="300" Style="{StaticResource MaterialDesignOutlinedTextBox}" TextWrapping="Wrap" 
                                 VerticalScrollBarVisibility="Auto" Width="320" Margin="0,10,0,0" />

                            <!--кнопки-->
                            <Grid Grid.Row="3" Grid.Column="0" Margin="0,40,0,0" HorizontalAlignment="Center">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Row="0" Grid.Column="0" Content="Отмена" 
            Width="150" Height="35" Background="Gray" 
            BorderBrush="Black" Command="{Binding ClosePopup}" />
                                <Button Grid.Row="0" Grid.Column="1" Content="{Binding ActionConfirmationButton}"
            x:Name="RenameButtonBrand" Width="150" Height="35" 
            Background="Gray" BorderBrush="Black" Margin="20,0,0,0" Command="{Binding Btn_SaveData}"/>

                            </Grid>

                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>

        <!--Popup для удаления данных-->
        <Grid>
            <Popup x:Name="DeleteDataPopup" PlacementTarget="{Binding ElementName=positionPopup}" 
                   Placement="Center" Grid.ColumnSpan="4" Grid.RowSpan="4" HorizontalOffset="0" 
                   VerticalOffset="-40" StaysOpen="False" Closed="MyPopup_Closed" 
                   AllowsTransparency="False" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid Background="Gray">
                    <!--фон-->
                    <Border Background="AliceBlue" Style="{StaticResource OutlineOfPopup}" >
                        <Grid Width="500" Height="330">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" Text="Удаление данных" 
                                           Margin="0, 10, 0, 0" FontSize="30" FontWeight="Bold"/>

                                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center" 
                                            Height="50" Margin="10,20,10,0">
                                    <TextBlock Text="Вы действительно хотите удалить категорию, а также все зависимые блюда с ней?" FontSize="20" FontWeight="DemiBold" 
                                               HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center"/>
                                </StackPanel>

                                <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" Height="100" Margin="0,0,0,15">
                                    <TextBlock Text="{Binding NameOfCategoryDeleted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
           TextWrapping="Wrap" x:Name="NameOfCategoryDeleted" HorizontalAlignment="Center" 
           VerticalAlignment="Center" Margin="25,0,25,0"  FontSize="20" FontWeight="DemiBold"/>
                                </ScrollViewer>



                                <Grid Grid.Row="3" Grid.Column="0" Margin="0,0,0,25" VerticalAlignment="Bottom">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Button Grid.Row="0" Grid.Column="0" Content="Отмена" Width="150" 
                                            Height="35" Background="Gray" BorderBrush="Black" Command="{Binding ClosePopup}"/>
                                    <Button Grid.Row="0" Grid.Column="1" Content="Удалить" Width="150" 
                                            Height="35" Background="Gray" BorderBrush="Black" Margin="0,0,0,0" Command="{Binding Btn_DeleteData}"/>

                                </Grid>

                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>

    </Grid>
</Page>
