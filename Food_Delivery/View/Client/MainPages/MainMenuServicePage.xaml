<Page x:Class="Food_Delivery.View.Client.MainPages.MainMenuServicePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:ViewModel="clr-namespace:Food_Delivery.ViewModel.Client"
      xmlns:local="clr-namespace:Food_Delivery.View.Client.MainPages"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d"
      MouseLeftButtonDown="Window_LossOfFocus"
      MinHeight="600" Height="Auto"
      Title="MainMenuServicePage">

    <Page.Resources>
        <!--связываем View и ViewModel-->
        <ViewModel:MainMenuServiceViewModel x:Key="MainMenuServiceViewModel"/>

        <!--анимация подсветки полей-->
        <Storyboard x:Key="FieldIllumination">
            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
    From="#de6d6d" To="Transparent" Duration="0:0:3" AutoReverse="False"/>
        </Storyboard>
    </Page.Resources>

    <Grid DataContext="{StaticResource MainMenuServiceViewModel}">

        <!--стили-->
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="\Dictionary\Table.xaml"/>
                    <ResourceDictionary Source="\Dictionary\Popup.xaml"/>
                    <ResourceDictionary Source="\Dictionary\Button.xaml"/>
                    <ResourceDictionary Source="\Dictionary\TextBox.xaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>

        <!--Разметка для шапки-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>

        <!--фон для корзины-->
        <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" PreviewMouseLeftButtonUp="Window_MouseLeftButtonDown" Grid.RowSpan="2"
  Visibility="{Binding DarkBackground, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
  Background="#98000000" Panel.ZIndex="2" x:Name="DarkBackground"
  Margin="0,0,0,0" Padding="0,0,0,0"/>

        <!--тип аккаунта-->
        <TextBlock Grid.Row="0" Grid.Column="2" x:Name="Role" Text="{Binding AuthorizedUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
           FontSize="24" Foreground="Black" FontWeight="Regular" HorizontalAlignment="Right" Margin="0,0,80,0" VerticalAlignment="Center" Panel.ZIndex="2"/>

        <!--фон-->
        <Grid Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="0" Background="#FFC7F6C7"/>

        <!--элемент, относительно которого будет закреплен popup-->
        <Grid Grid.RowSpan="2" Grid.ColumnSpan="4" x:Name="centerPopup" HorizontalAlignment="Center"></Grid>

        <!--Шапка-->
        <Grid Grid.Row="0" Grid.Column="0" Height="60" x:Name="logo">
            <TextBlock Text="ВкусноРолл" FontSize="24" Foreground="Black"
               HorizontalAlignment="Left"
        VerticalAlignment="Center" Padding="0, 0, 0, 10" FontWeight="ExtraBlack" Margin="25,0,0,0"/>
        </Grid>

        <!--адрес-->
        <Grid Grid.Row="0" Grid.Column="1" x:Name="map">
            <Button Command="{Binding Btn_AdressUser}" Style="{DynamicResource BtnNotBackground}" Height="40" Width="240" Padding="0, 0, 0, 0">
                <StackPanel Orientation="Horizontal">
                    <TextBox TextWrapping="WrapWithOverflow" Text="{Binding SelectedAdress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontWeight="Bold" Height="40" Width="240" IsEnabled="False">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <!--Иконка карты-->
                    <materialDesign:PackIcon Kind="MapMarker" Margin="-225,0,0,0" VerticalAlignment="Center" Panel.ZIndex="1"/>
                </StackPanel>
            </Button>
        </Grid>

        <!--авторизация-->
        <Grid Grid.Row="0" Grid.Column="2" x:Name="loginButton">
            <Button x:Name="login" Command="{Binding Btn_Authorization}"
Visibility="{Binding IsVisibilityAuthorizationButton, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
Width="150" Foreground="Black" BorderThickness="0"
FontSize="15" FontWeight="ExtraBlack" HorizontalAlignment="Center"
Content="Авторизация" Background="#00000000"
materialDesign:ButtonProgressAssist.IsIndeterminate="True"
materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
materialDesign:ButtonProgressAssist.Value="-1"
ToolTip="MaterialDesignOutlinedButton" />
        </Grid>

        <!--корзина-->
        <Grid Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Grid.RowSpan="2" Panel.ZIndex="2"
              HorizontalAlignment="Right">
            <local:ShoppingCart x:Name="ShoppingCart"/>
        </Grid>

        <!--скрытая иконка аккаунта-->
        <Grid Grid.Row="0" Grid.Column="3" x:Name="personalAccount" Margin="45, 0, 0, 0" Visibility="{Binding IsVisibilityUserProfileButton, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button x:Name="AccountButton" Grid.Column="0" Width="55" Height="55"
           Background="Transparent" BorderBrush="Transparent" Command="{Binding Btn_GoToProfile_Orders}"
           HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ZIndex="1"/>

            <materialDesign:PackIcon Kind="Account" Grid.Column="0" Height="55" Width="55"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Margin="0,0,0,0" />

        </Grid>

        <!--скрытая кнопка домой-->
        <Grid Grid.Row="0" Grid.Column="3" Margin="45, 0, 0, 0" Visibility="{Binding IsVisibilityGoToHomeButton, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Width="55" Height="55"
           Background="Transparent" BorderBrush="Transparent" Command="{Binding Btn_GoToHome}"
           HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ZIndex="1"/>

            <materialDesign:PackIcon Kind="HomeAccount" Grid.Column="0" Height="55" Width="55"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Margin="0,0,0,0" />

        </Grid>

        <!--скрытая кнопка выхода из аккаунта-->
        <Grid Grid.Row="0" Grid.Column="3" x:Name="shoppingCartIcon" Margin="-25,0,0,0" Visibility="{Binding IsVisibilityOutAccountButton, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button x:Name="ExitButton" Grid.Column="0" Width="44" Height="43"
    Background="Transparent" BorderBrush="Transparent" Command="{Binding Btn_LogOutOfYourAccount}"
    HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ZIndex="1"/>

            <materialDesign:PackIcon Grid.Column="0" Kind="AccountCard" Height="44" Width="44"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Margin="0,0,0,0"  />
        </Grid>

        <!--меню корзины-->
        <ListBox x:Name="CartMenu" Grid.Row="1"
                Width="200" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                Visibility="Collapsed">
            <!--содержимое корзины-->
        </ListBox>

        <!--кнопка возврата из фрейма-->
        <Grid  Grid.RowSpan="2" Grid.ColumnSpan="3" Visibility="Hidden" x:Name="closeFrame">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Верхняя часть экрана -->
            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Button Content="Домой" Margin="50, 25, 0, 0" Padding="-20, -3, 0, 0" Width="100"/>
                <materialDesign:PackIcon Kind="Home" Margin="120, 31, 0, 0" Width="20" Height="20"/>
            </Grid>

        </Grid>

         <!--профиль-->
        <Grid Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="7" Background="#FFABAAAA" VerticalAlignment="Top" Margin="0,0,0,0" Panel.ZIndex="1" Height="30"
              Visibility="{Binding IsVisibilityPersonalAccountMenu, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">

            <!--Шапка с атрибутами меню-->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="15*"/>
                <ColumnDefinition Width="15*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.Column="1">
                <Button x:Name="BtnOrders" Content="ЗАКАЗЫ" Background="Transparent" BorderBrush="Transparent"
                        Command="{Binding Btn_GoToProfile_Orders}"/>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="2">
                <Button x:Name="BtnPersonalData" Content="ЛИЧНЫЕ ДАННЫЕ" Background="Transparent" BorderBrush="Transparent"
                        Command="{Binding Btn_GoToProfile_PersonalData}"/>
            </Grid>

        </Grid>

        <!--страница с товарами-->
        <Frame Grid.Row="1" Content="{Binding FrameMainMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
       NavigationUIVisibility="Hidden" Grid.ColumnSpan="5"/>
        
        <!--личный кабинет и оформление заказа-->
        <Frame Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="6" Content="{Binding FramePlaceOrder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
NavigationUIVisibility="Hidden" Panel.ZIndex="0"/>

        <!--Popup адреса доставки-->
        
        <!--Popup выхода из аккаунта-->
        <!-- размещение Popup относительно данного grid-->
        <Grid x:Name="positionPopup" Grid.RowSpan="8" Grid.ColumnSpan="8" 
HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <Popup x:Name="UserAdress" PlacementTarget="{Binding ElementName=positionPopup}" 
    IsOpen="{Binding StartPoupUserAdress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    Placement="Center" Grid.ColumnSpan="4" Grid.RowSpan="4" HorizontalOffset="0" 
    VerticalOffset="-40" StaysOpen="False" Closed="MyPopup_Closed" 
    AllowsTransparency="False" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid Background="Gray">
                <!--фон-->
                <Border Background="AliceBlue" Style="{StaticResource OutlineOfPopup}" >
                    <Grid Width="400" Height="380">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="50*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"  HorizontalAlignment="Center" Text="Адрес доставки" Margin="0, 10, 0, 0" FontSize="30" FontWeight="Bold"/>

                        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  HorizontalAlignment="Center" Margin="0, 5, 0, 0">
                            <!--город-->
                            <StackPanel>
                                <CheckBox x:Name="MaterialDesignFilledTextBoxTextCountComboBox5" Content="" IsChecked="True" Visibility="Hidden"/>
                                <TextBox Width="350"
             VerticalAlignment="Top" x:Name="ClientCity"
             Text="{Binding OutClientCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
             materialDesign:HintAssist.Hint="Город"
             materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
             materialDesign:TextFieldAssist.HasClearButton="True"
             MaxLength="50"
             FontSize="16"
             Style="{StaticResource MaterialDesignFilledTextBox}"
             TextWrapping="Wrap"/>
                            </StackPanel>
                        </Grid>

                        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"  HorizontalAlignment="Center" Margin="0, 5, 0, 0">
                            <!--улица-->
                            <StackPanel>
                                <CheckBox x:Name="MaterialDesignFilledTextBoxTextCountComboBox6" Content="" IsChecked="True" Visibility="Hidden"/>
                                <TextBox Width="350"
             VerticalAlignment="Top" x:Name="ClientStreet"
             Text="{Binding OutClientStreet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
             materialDesign:HintAssist.Hint="Улица"
             materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
             materialDesign:TextFieldAssist.HasClearButton="True"
             MaxLength="50"
             FontSize="16"
             Style="{StaticResource MaterialDesignFilledTextBox}"
             TextWrapping="Wrap"/>
                            </StackPanel>
                        </Grid>

                        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"  HorizontalAlignment="Center" Margin="0, 5, 0, 0">
                            <StackPanel Orientation="Horizontal">
                                <!--дом-->
                                <StackPanel Margin="0, 0, 0, 0" Width="165">
                                    <CheckBox x:Name="MaterialDesignFilledTextBoxTextCountComboBox7" Content="" IsChecked="True" Visibility="Hidden"/>
                                    <TextBox
                VerticalAlignment="Top" x:Name="ClientHouse"
                Text="{Binding OutClientHouse, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                materialDesign:HintAssist.Hint="Дом"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                materialDesign:TextFieldAssist.HasClearButton="True"
                MaxLength="5"
                FontSize="16"
                Style="{StaticResource MaterialDesignFilledTextBox}"
                TextWrapping="Wrap"/>
                                </StackPanel>
                                <!--квартира-->
                                <StackPanel Orientation="Vertical" Margin="17, 0, 0, 0" Width="165">
                                    <CheckBox x:Name="MaterialDesignFilledTextBoxTextCountComboBox8" Content="" IsChecked="True" Visibility="Hidden"/>
                                    <TextBox
                VerticalAlignment="Top" x:Name="ClientApartment"
                Text="{Binding OutClientApartment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                materialDesign:HintAssist.Hint="Квартира"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed"
                materialDesign:TextFieldAssist.HasClearButton="True"
                MaxLength="5"
                FontSize="16"
                Style="{StaticResource MaterialDesignFilledTextBox}"
                TextWrapping="Wrap">
                                    </TextBox>
                                </StackPanel>
                            </StackPanel>
                        </Grid>

                        <!--сообщение об ошибке-->
                        <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" 
           Text="{Binding ErrorInputPopup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center"
           Height="60" Width="380" TextWrapping="Wrap" Margin="0,0,0,0" x:Name="ErrorInputPopup" 
           FontWeight="DemiBold" FontSize="18" />

                        <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"  HorizontalAlignment="Center" Margin="0, 65, 0, 0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Button Grid.Row="0" Grid.Column="0" Content="Отмена" Width="150" 
 Height="35" BorderBrush="Black" Background="Gray" Command="{Binding ClosePopup}" Margin="0,0,10,0"/>
                            <Button x:Name="submitButton" Grid.Column="1" Content="Сохранить адрес" Width="150" Height="35" 
                                   Margin="10,0,0,0" BorderBrush="Black" Background="Gray" Command="{Binding Btn_AddAdress}"/>
                        </Grid>

                    </Grid>
                </Border>
            </Grid>
        </Popup>

        
        <!--Popup выхода из аккаунта-->
        <Popup x:Name="DeleteDataPopup" PlacementTarget="{Binding ElementName=positionPopup}" 
    IsOpen="{Binding StartPoupOfOutAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    Placement="Center" Grid.ColumnSpan="4" Grid.RowSpan="4" HorizontalOffset="0" 
    VerticalOffset="-40" StaysOpen="False" Closed="MyPopup_Closed" 
    AllowsTransparency="False" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid Background="Gray">
                <!--фон-->
                <Border Background="AliceBlue" Style="{StaticResource OutlineOfPopup}" >
                    <Grid Width="400" Height="250">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="Вы действительно хотите выйти из аккаунта?" FontSize="20" FontWeight="DemiBold" 
                                HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Height="110" Margin="20,130,20,0"/>
                            </StackPanel>

                            <Grid Grid.Row="1" Grid.Column="0" Margin="0,0,0,25" VerticalAlignment="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Button Grid.Row="0" Grid.Column="0" Content="Отмена" Width="150" 
                             Height="35" Background="Gray" BorderBrush="Black" Command="{Binding ClosePopup}"/>
                                <Button Grid.Row="0" Grid.Column="1" Content="Выход" Width="150" 
                             Height="35" Background="Gray" BorderBrush="Black" Margin="0,0,0,0" Command="{Binding Btn_LogOutYourAccount}"/>

                            </Grid>

                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Popup>
        
    </Grid>
</Page>
